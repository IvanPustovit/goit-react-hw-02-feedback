{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section .js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","defaultProps","FeedbackOptions","onLeaveFeedback","onClick","type","Notification","message","prototype","PropTypes","string","Section","title","number","isRequired","func","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","e","keyState","target","textContent","toLowerCase","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAGMA,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAE/C,OACE,6BACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,QAKNL,EAAWM,aAAe,CAAED,mBAAoB,GASjCL,QCTAO,EAbS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,yBAAKC,QAASD,GACZ,4BAAQE,KAAK,UAAb,QACA,4BAAQA,KAAK,UAAb,WACA,4BAAQA,KAAK,UAAb,S,gBCLAC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAMA,IAGfD,EAAaE,UAAY,CACvBD,QAASE,IAAUC,QAENJ,QCJTK,EAAU,SAAC,GAQV,IAPLC,EAOI,EAPJA,MACAhB,EAMI,EANJA,KACAC,EAKI,EALJA,QACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,mBACAG,EACI,EADJA,gBAEA,OACE,iCACE,2BAAIS,GACJ,kBAAC,EAAD,CAAiBT,gBAAiBA,IAClC,yCACCJ,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcO,QAAQ,wBAM9BI,EAAQV,aAAe,CACrBW,MAAO,yBAETD,EAAQH,UAAY,CAClBI,MAAOH,IAAUC,OACjBd,KAAMa,IAAUI,OAAOC,WACvBjB,QAASY,IAAUI,OAAOC,WAC1BhB,IAAKW,IAAUI,OAAOC,WACtBf,MAAOU,IAAUI,OAAOC,WACxBd,mBAAoBS,IAAUI,OAAOC,WACrCX,gBAAiBM,IAAUM,KAAKD,YAGnBH,QCJAK,E,4MAxCbC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,mBAAqB,WAEnB,OADc,EAAKD,MAAMrB,KAAO,EAAKqB,MAAMpB,QAAU,EAAKoB,MAAMnB,K,EAIlEqB,gCAAkC,WAIhC,OAHmBC,KAAKC,MACrB,EAAKJ,MAAMrB,KAAO,EAAKsB,qBAAwB,M,EAKpDf,gBAAkB,SAAAmB,GAChB,IAAMC,EAAWD,EAAEE,OAAOC,YAAYC,cACtC,EAAKC,UAAS,SAAAC,GAAS,sBAAQL,EAAWK,EAAUL,GAAY,O,uDAGxD,IAAD,EACwBM,KAAKZ,MAA5BrB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO8B,KAAKX,qBACZlB,mBAAoB6B,KAAKV,kCACzBhB,gBAAiB0B,KAAK1B,uB,GAlCd2B,aCElBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.a244e411.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  // console.log(total);\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage} %</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = { positivePercentage: 0 };\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <div onClick={onLeaveFeedback}>\r\n      <button type=\"button\">Good</button>\r\n      <button type=\"button\">Neutral</button>\r\n      <button type=\"button\">Bad</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <div>{message}</div>;\r\n};\r\n\r\nNotification.prototype = {\r\n  message: PropTypes.string,\r\n};\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({\r\n  title,\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n  onLeaveFeedback,\r\n}) => {\r\n  return (\r\n    <section>\r\n      <p>{title}</p>\r\n      <FeedbackOptions onLeaveFeedback={onLeaveFeedback} />\r\n      <p>Statistics</p>\r\n      {total > 0 ? (\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={total}\r\n          positivePercentage={positivePercentage}\r\n        />\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: \"Please leave feedback\",\r\n};\r\nSection.prototype = {\r\n  title: PropTypes.string,\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section/Section \";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const Percentage = Math.floor(\n      (this.state.good / this.countTotalFeedback()) * 100,\n    );\n    return Percentage;\n  };\n\n  onLeaveFeedback = e => {\n    const keyState = e.target.textContent.toLowerCase();\n    this.setState(prevState => ({ [keyState]: prevState[keyState] + 1 }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}